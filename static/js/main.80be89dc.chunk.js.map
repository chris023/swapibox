{"version":3,"sources":["assets/card-images/darthvader.png","assets/card-images/alderaan.png","assets/card-images/atat.png","assets/card-images/atst.png","assets/card-images/beru.png","assets/card-images/bespin.png","assets/card-images/bigg.png","assets/card-images/c3p0.png","assets/card-images/cloudcar.png","assets/card-images/coruscant.png","assets/card-images/dagobah.png","assets/card-images/endor.png","assets/card-images/geonosis.png","assets/card-images/hoth.png","assets/card-images/kamino.png","assets/card-images/leia.png","assets/card-images/luke.png","assets/card-images/naboo.png","assets/card-images/obiwan.png","assets/card-images/owen.png","assets/card-images/r2d2.png","assets/card-images/r5d4.png","assets/card-images/sailbarge.png","assets/card-images/sandcrawler.png","assets/card-images/snowspeeder.png","assets/card-images/t16skyhopper.png","assets/card-images/tiebomber.png","assets/card-images/tiefighter.png","assets/card-images/x34landspeeder.png","assets/card-images/yavin4.png","assets/refresh.png","components/Landing/Landing.jsx","components/Landing/OpeningCrawl/OpeningCrawl.jsx","components/Landing/index.js","components/People/index.js","components/People/People.jsx","components/Planets/index.js","components/Planets/Planets.jsx","components/Sidebar/index.js","components/Sidebar/Sidebar.jsx","components/Vehicles/index.js","components/Vehicles/Vehicles.jsx","components/Favorites/index.js","components/Favorites/Favorites.jsx","components/Card/index.js","components/Card/Card.jsx","components/LoadingSplash/index.js","components/LoadingSplash/LoadingSplash.jsx","components/PageLogo/index.js","components/PageLogo/PageLogo.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Landing","state","randFilm","episode","handleRefresh","_this","getRandomFilm","films","props","data","randIndex","Math","round","random","length","setState","nextProps","loading","this","_this$state","Object","keys","opening_crawl","title","release_date","react_default","a","createElement","className","src","refreshIcon","alt","onClick","components_LoadingSplash","Landing_OpeningCrawl_OpeningCrawl","key","Component","OpeningCrawl","_this$props","react","split","People","getAttrForChar","character","getAttribute","name","homeworld","species","population","language","homeworldName","homeworldPop","speciesName","speciesLang","_this2","toggleFavorite","people","planets","map","_this2$getAttrForChar","content","components_Card","type","Planets","getAttrForPlanet","planet","terrain","climate","residents","resident","_unused","filter","join","_this2$getAttrForPlan","Sidebar","currentPage","history","location","pathname","components_PageLogo","option","NavLink","exact","to","concat","toLowerCase","href","target","rel","Vehicles","getAttrForVehicle","vehicle","vehicles","model","vehicle_class","passengers","Favorites","favorites","category","Card","fav","getImage","Alderaan","alderaan","AT-AT","atat","AT-ST","atst","Bespin","bespin","C-3PO","c3p0","Coruscant","coruscant","Dagobah","dagobah","Darth Vader","vader","Endor","endor","Luke Skywalker","luke","R2-D2","r2d2","Leia Organa","leia","Owen Lars","owen","Beru Whitesun lars","beru","R5-D4","r5d4","Biggs Darklighter","bigg","Obi-Wan Kenobi","obiwan","Geonosis","geonosis","Hoth","hoth","Kamino","kamino","Naboo","naboo","Sail barge","sailbarge","Sand Crawler","sandcrawler","Snowspeeder","snowspeeder","Storm IV Twin-Pod cloud car","cloudcar","T-16 skyhopper","t16skyhopper","TIE bomber","tiebomber","TIE/LN starfighter","tiefighter","X-34 landspeeder","x34landspeeder","Yavin IV","yavin4","handleClick","prev","LoadingSplash","loadingIcons","randomIcon","PageLogo","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchAPIData","directories","forEach","fetch","then","response","json","_ref","results","count","prevState","numPages","ceil","i","_ref2","url","splitURL","id","starships","rerender","Route","path","render","components_Sidebar","assign","Switch","components_Landing","components_People","components_Planets","components_Vehicles","components_Favorites","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById","URL","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.80be89dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/darthvader.888705af.png\";","module.exports = __webpack_public_path__ + \"static/media/alderaan.ce8f9a3c.png\";","module.exports = __webpack_public_path__ + \"static/media/atat.d44a7f56.png\";","module.exports = __webpack_public_path__ + \"static/media/atst.7ce8ba02.png\";","module.exports = __webpack_public_path__ + \"static/media/beru.01178ef9.png\";","module.exports = __webpack_public_path__ + \"static/media/bespin.553aab71.png\";","module.exports = __webpack_public_path__ + \"static/media/bigg.96d099dd.png\";","module.exports = __webpack_public_path__ + \"static/media/c3p0.1f31c7c2.png\";","module.exports = __webpack_public_path__ + \"static/media/cloudcar.0a98859b.png\";","module.exports = __webpack_public_path__ + \"static/media/coruscant.9aaaef0f.png\";","module.exports = __webpack_public_path__ + \"static/media/dagobah.fe6ec7e8.png\";","module.exports = __webpack_public_path__ + \"static/media/endor.1ca16ea6.png\";","module.exports = __webpack_public_path__ + \"static/media/geonosis.bcdeaf37.png\";","module.exports = __webpack_public_path__ + \"static/media/hoth.862f0010.png\";","module.exports = __webpack_public_path__ + \"static/media/kamino.b368f2de.png\";","module.exports = __webpack_public_path__ + \"static/media/leia.ed2be783.png\";","module.exports = __webpack_public_path__ + \"static/media/luke.9337f381.png\";","module.exports = __webpack_public_path__ + \"static/media/naboo.e6ed8eb0.png\";","module.exports = __webpack_public_path__ + \"static/media/obiwan.59fc7c6d.png\";","module.exports = __webpack_public_path__ + \"static/media/owen.c82800f1.png\";","module.exports = __webpack_public_path__ + \"static/media/r2d2.fc13d8c1.png\";","module.exports = __webpack_public_path__ + \"static/media/r5d4.97a92a26.png\";","module.exports = __webpack_public_path__ + \"static/media/sailbarge.beec5687.png\";","module.exports = __webpack_public_path__ + \"static/media/sandcrawler.1982d716.png\";","module.exports = __webpack_public_path__ + \"static/media/snowspeeder.4859b0b0.png\";","module.exports = __webpack_public_path__ + \"static/media/t16skyhopper.b0b5fd7a.png\";","module.exports = __webpack_public_path__ + \"static/media/tiebomber.c18c1e90.png\";","module.exports = __webpack_public_path__ + \"static/media/tiefighter.f40e9d6a.png\";","module.exports = __webpack_public_path__ + \"static/media/x34landspeeder.43436353.png\";","module.exports = __webpack_public_path__ + \"static/media/yavin4.4a60ddf5.png\";","module.exports = __webpack_public_path__ + \"static/media/refresh.47e05de7.png\";","import React, { Component } from 'react';\nimport { LoadingSplash } from '../';\nimport refreshIcon from '../../assets/refresh.png';\nimport { OpeningCrawl } from './';\n\nimport './Landing.scss';\n\nexport default class Landing extends Component {\n\n  state = {\n    randFilm: {},\n    episode: 0\n  }\n\n  handleRefresh = () => {\n    this.getRandomFilm();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.loading.films) return false;\n    return true;\n  }\n\n  getRandomFilm = () => {\n    const { data } = this.props;\n    const { films } = data;\n    \n    const randIndex = Math.round(Math.random() * (films.length - 1));\n    this.setState({ randFilm: films[randIndex], episode: randIndex + 1 });\n  }\n\n  render() {\n    const { loading } = this.props;\n    const { randFilm, episode } = this.state;\n\n    if (!loading.films && !Object.keys(randFilm).length) this.getRandomFilm();\n    \n    const {\n      opening_crawl,\n      title,\n      release_date,\n    } = randFilm;\n\n    return (\n      <div className='Landing'>\n        <img src={refreshIcon} alt=\"\" className='refresh-ico' onClick={this.handleRefresh}/>\n        {\n          (loading.films || !Object.keys(randFilm).length)\n            ? (<LoadingSplash />)\n            : (\n              <OpeningCrawl\n                opening_crawl={opening_crawl}\n                title={title}\n                release_date={release_date}\n                episode={episode}\n                key={episode}\n              />\n            ) \n        }\n      </div>\n    )\n  }\n}","import React, { Component, Fragment } from 'react';\n\nclass OpeningCrawl extends Component {\n  render() {\n    const { title, release_date, episode, opening_crawl } = this.props;\n    return (\n      <Fragment>\n        <div className='opening-crawl'>\n          <div className=\"title\">\n            <h2>{title + ' (' + release_date.split('-')[0] + ')'}</h2>\n            <p>Episode {episode}</p>\n          </div>\n          <p>{opening_crawl}</p>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default OpeningCrawl;","import Landing from './Landing';\nimport OpeningCrawl from './OpeningCrawl/OpeningCrawl';\n\nexport { OpeningCrawl };\nexport default Landing;","import People from './People';\n\nexport default People;","import React, { Component, Fragment } from 'react';\nimport { Card, LoadingSplash } from '../';\n\nimport './People.scss';\n\nclass People extends Component {\n\n  getAttrForChar = (character) => {\n    const { getAttribute } = this.props;\n    let { name, homeworld, species } = character;\n\n    if (homeworld) homeworld = getAttribute(homeworld);\n\n    if (species) species = getAttribute(species[0]);\n\n    if (!homeworld) homeworld = { name: 'Unknown', population: 'Unknown' }\n    if (!species) species = { name: 'Unknown', language: 'Unknown' }\n\n    return {\n      name,\n      homeworldName: homeworld.name,\n      homeworldPop: homeworld.population,\n      speciesName: species.name,\n      speciesLang: species.language,\n    }\n  }\n\n  render() {\n    const { loading, toggleFavorite } = this.props;\n    const { people } = this.props.data;\n\n    return (\n      <div className='People grid-content'>\n        {\n          (loading.people || loading.species || loading.planets)\n            ? (<LoadingSplash />)\n            : \n                people.map((character) => {\n                  const {\n                    name,\n                    homeworldName,\n                    homeworldPop,\n                    speciesName,\n                    speciesLang } = this.getAttrForChar(character);\n                  \n                  const content = (\n                    <Fragment>\n                      <p>Homeworld: {homeworldName}</p>\n                      <p>Population: {homeworldPop}</p>\n                      <p>Species: {speciesName}</p>\n                      <p>Language: {speciesLang}</p>\n                    </Fragment>\n                  )\n\n                  return (\n                    <Card\n                      type={'people'}\n                      name={name}\n                      content={content}\n                      toggleFavorite={toggleFavorite}\n                      key={name}\n                    />\n                  )\n                }\n              \n            )\n        }\n      </div>\n      \n    )\n  }\n}\n\nexport default People;\n","import Planets from './Planets';\n\nexport default Planets;","import React, { Component, Fragment } from 'react';\nimport { Card } from '../';\n\nimport './Planets.scss';\n\nclass Planets extends Component {\n\n  getAttrForPlanet = (planet) => {\n    const { getAttribute } = this.props;\n    let { name, terrain, population, climate, residents } = planet;\n\n    if (residents.length) {\n      residents = residents.map(resident => {\n        try { return getAttribute(resident).name }\n        catch { return 'n/a' }\n      })\n      residents = residents.filter(name => name !== 'n/a')\n      residents = residents.join(', ');\n    } \n    \n    if(!residents.length) residents = 'none';\n\n    return {\n      name,\n      terrain,\n      population,\n      climate,\n      residents,\n    }\n  }\n\n  render() {\n    const { toggleFavorite } = this.props;\n    const { planets } = this.props.data;\n\n    return (\n      <div className='Planets grid-content'>\n        {planets.map((planet) => {\n          const {\n            name,\n            terrain,\n            population,\n            climate,\n            residents } = this.getAttrForPlanet(planet);\n\n          const content = (\n            <Fragment>\n              <p>Terrain: {terrain}</p>\n              <p>Population: {population}</p>\n              <p>Climate: {climate}</p>\n              <p>Residents: {residents}</p>\n            </Fragment>\n          )\n\n          return (\n            <Card\n              type={'planet'}\n              name={name}\n              content={content}\n              toggleFavorite={toggleFavorite}\n              key={name}\n            />\n          )\n        })\n        }\n      </div>\n    )\n  }\n}\n\nexport default Planets;","import Sidebar from './Sidebar';\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PageLogo } from '../';\n\nimport './Sidebar.scss';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    const menuOptions = ['Home', 'People', 'Planets', 'Vehicles', 'Favorites'];\n    \n    const { pathname } = this.props.history.location;\n    let currentPage = pathname.split('/')[1];\n    if (currentPage === '') currentPage = 'home';\n\n    return (\n      <div className='Sidebar'>\n        <PageLogo />\n        {\n          menuOptions.map((option) => {\n            return(\n              <div className='button-container' key={option}>\n                <NavLink\n                  className='button'\n                  exact\n                  to={option === 'Home' ? '/' : `/${option.toLowerCase()}`}\n                >\n                  {option}\n                </NavLink>\n                <span className={currentPage === option.toLowerCase() ? 'dot' : 'dot hidden'}>{' •'}</span>\n                {(option === 'Favorites') && (\n                  <div className='fav-indicator'>\n                    5\n                  </div>\n                )}\n              </div>\n            )\n          })\n        }\n        <div className=\"help-ico\">\n          ?\n          <div className=\"modal\">\n            <p>Created by Chris Meyer (2019)</p>\n            <a href='https://github.com/chris023/swapibox' target='_blank' rel=\"noopener noreferrer\"> Github</a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import Vehicles from './Vehicles';\n\nexport default Vehicles;","import React, { Component, Fragment } from 'react';\nimport { Card } from '../';\n\nimport './Vehicles.scss';\n\nclass Vehicles extends Component {\n  getAttrForVehicle = (vehicle) => {\n    const { getAttribute } = this.props;\n    let { name, terrain, population, climate, residents } = vehicle;\n\n    if (residents.length) {\n      residents = residents.map(resident => {\n        try { return getAttribute(resident).name }\n        catch { return 'n/a' }\n      })\n      residents = residents.filter(name => name !== 'n/a')\n      residents = residents.join(', ');\n    }\n\n    if (!residents.length) residents = 'none';\n\n    return {\n      name,\n      terrain,\n      population,\n      climate,\n      residents,\n    }\n  }\n\n  render() {\n    const { toggleFavorite } = this.props;\n    const { vehicles} = this.props.data;\n\n    return (\n      <div className='Vehicles grid-content'>\n        {vehicles.map((vehicle) => {\n          const {\n            name,\n            model,\n            vehicle_class,\n            passengers\n          } = vehicle;\n\n          const content = (\n            <Fragment>\n              <p>Model: {model}</p>\n              <p>Class: {vehicle_class}</p>\n              <p>Passengers: {passengers}</p>\n            </Fragment>\n          )\n\n          return (\n            <Card\n              type={'vehicle'}\n              name={name}\n              content={content}\n              toggleFavorite={toggleFavorite}\n              key={name}\n            />\n          )\n        })\n        }\n      </div>\n    )\n  }\n}\n\nexport default Vehicles;","import Favorites from './Favorites';\n\nexport default Favorites;","import React, { Component } from 'react';\nimport { Card, LoadingSplash } from '../';\n\nimport './Favorites.scss';\n\nclass Favorites extends Component {\n  \n  render() {\n    const { loading, favorites, toggleFavorite } = this.props;\n\n    return (\n      <div className='Favorites grid-content'>\n        {\n          (loading.people || loading.species || loading.planets)\n            ? (<LoadingSplash />)\n            :\n          Object.keys(favorites).map(category => \n            Object.keys(favorites[category]).map((name) => {\n              return (\n                <Card\n                  type={category}\n                  name={name}\n                  content={favorites[category][name]}\n                  toggleFavorite={toggleFavorite}\n                  key={name}\n                />\n              )\n            })\n          )\n        }\n      </div>\n\n    )\n  }\n}\n\nexport default Favorites;","import Card from './Card';\n\nexport default Card;","import React, { Component } from 'react';\n\nimport './Card.scss';\nimport {\n  alderaan,\n  atat,\n  atst,\n  beru,\n  bespin,\n  bigg,\n  c3p0,\n  cloudcar,\n  coruscant,\n  dagobah,\n  endor,\n  geonosis,\n  hoth,\n  kamino,\n  leia,\n  luke,\n  naboo,\n  obiwan,\n  owen,\n  r2d2,\n  r5d4,\n  sailbarge,\n  sandcrawler,\n  snowspeeder,\n  t16skyhopper,\n  tiebomber,\n  tiefighter,\n  vader,\n  x34landspeeder,\n  yavin4,\n} from '../../assets/card-images';\n\nclass Card extends Component {\n\n  state = { fav: false}\n\n  getImage = (name) => {\n    const images = {\n      \"Alderaan\": alderaan,\n      \"AT-AT\": atat,\n      \"AT-ST\": atst,\n      \"Bespin\": bespin,\n      \"C-3PO\": c3p0,\n      \"Coruscant\": coruscant,\n      \"Dagobah\": dagobah,\n      \"Darth Vader\": vader,\n      \"Endor\": endor,\n      \"Luke Skywalker\": luke,\n      \"R2-D2\": r2d2,\n      \"Leia Organa\": leia,\n      \"Owen Lars\": owen,\n      \"Beru Whitesun lars\": beru,\n      \"R5-D4\": r5d4,\n      \"Biggs Darklighter\": bigg,\n      \"Obi-Wan Kenobi\": obiwan,\n      \"Geonosis\": geonosis,\n      \"Hoth\": hoth,\n      'Kamino': kamino,\n      \"Naboo\": naboo,\n      \"Sail barge\": sailbarge,\n      \"Sand Crawler\": sandcrawler,\n      \"Snowspeeder\": snowspeeder,\n      \"Storm IV Twin-Pod cloud car\": cloudcar,\n      \"T-16 skyhopper\": t16skyhopper,\n      \"TIE bomber\": tiebomber,\n      \"TIE/LN starfighter\": tiefighter,\n      \"X-34 landspeeder\": x34landspeeder,\n      \"Yavin IV\": yavin4\n    }\n\n    return images[name] || alderaan;\n  }\n\n  handleClick = (name, content, type) => {\n    const { toggleFavorite } = this.props;\n\n    toggleFavorite(name, content, type);\n    this.setState((prev) => ({ fav: !prev.fav }))\n  }\n\n  render() {\n    const { type, content, name } = this.props\n    const { fav } = this.state;\n\n    return (\n      <div className='Card'>\n        <div className={\"header \" + type}>\n          <p>{name}</p>\n          <div className={fav ? 'fav is-fav' : 'fav'} onClick={() => this.handleClick(name, content, type)}>\n            <div className={fav ? 'circle is-fav' : 'circle'} onClick={() => this.handleClick(name, content, type)}>\n              <div className={fav ? 'star-img is-fav' : 'star-img'} onClick={() => this.handleClick(name, content, type)}/>\n            </div>\n            <p>Favorited!</p>\n          </div>\n        </div>\n        <img className='card-image' src={this.getImage(name)} alt=\"\"/>\n        <div className={\"content \" + type }>\n          { content }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card;","import LoadingSplash from './LoadingSplash';\n\nexport default LoadingSplash;","import React, { Component } from 'react';\n\nimport './LoadingSplash.scss';\n\nclass LoadingSplash extends Component {\n  render() {\n    \n    const loadingIcons = ['vader', 'wookie', 'r2d2', 'c3po', 'bb8', 'fighter', 'fett', 'trooper', 'wren'];\n    const randomIcon = loadingIcons[Math.round(Math.random() * (loadingIcons.length - 1))]\n\n    return (\n      <div className='loading-wrapper'>\n        <div className={randomIcon} />\n        <p className=\"loading-text\">Loading</p>\n      </div>\n    )\n  }\n}\n\nexport default LoadingSplash;","import PageLogo from './PageLogo';\n\nexport default PageLogo;","import React, { Component } from 'react';\n\nimport './PageLogo.scss';\n\nclass PageLogo extends Component {\n  render() {\n    return(\n      <a className=\"PageLogo\" href='https://github.com/chris023/swapibox' target=\"_blank\" rel=\"noopener noreferrer\" >\n        <h2>SWAPI</h2>\n        <br />\n        <p>-- Box --</p>\n      </a>\n    )\n  }\n}\n\nexport default PageLogo;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Landing,\n  People,\n  Planets,\n  Sidebar,\n  Vehicles,\n  Favorites\n} from './components/';\n\nimport './App.scss';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: {\n        films: true,\n        people: true,\n        planets: true,\n        species: true,\n        vehicles: true,\n        starships: true,\n      },\n      data: { films: [''] },\n      favorites: {\n        people: {},\n        planet: {},\n        vehicle: {},\n      },\n      rerender: false,\n    };\n\n    this.directories = {\n      \"films\": \"https://swapi.co/api/films/\",\n      \"people\": \"https://swapi.co/api/people/\",\n      \"planets\": \"https://swapi.co/api/planets/\",\n      \"species\": \"https://swapi.co/api/species/\",\n      \"vehicles\": \"https://swapi.co/api/vehicles/\",\n      \"starships\": \"https://swapi.co/api/starships/\"\n    };\n  }\n  \n  componentDidMount() {\n    this.fetchAPIData();\n  }\n\n  fetchAPIData = () => {\n   \n    Object.keys(this.directories).forEach(category => {\n      fetch(this.directories[category])\n        .then(response => response.json())\n        .then(({ results, count }) => {\n          this.setState(prevState => {\n            prevState.data[category] = results;\n            return prevState;\n          });\n          \n          const numPages = Math.ceil(count / 10);\n          for (let i = 1; i < numPages; i++) {\n            fetch(this.directories[category] + '?page=' + (i + 1))\n              .then(response => response.json())\n              .then(({ results }) => {\n                this.setState((prevState) => {\n                  prevState.data[category] = prevState.data[category].concat(results);\n                  return prevState;\n                });\n              });\n          }\n\n          this.setState((prevState) => {\n            const loading = prevState.loading;\n            loading[category] = false;\n            return loading;\n          });\n        });\n    });\n  }\n\n  getAttribute = (url) => {\n    try {\n      const splitURL = url.split('/');\n      const id = splitURL[splitURL.length - 2];\n      const category = splitURL[splitURL.length - 3];\n      return this.state.data[category][id]\n    }\n    catch { return ''; }\n  }\n\n  toggleFavorite = (name, content, type) => {\n    this.setState((prev) => {\n      \n      if (prev.favorites[type][name]) delete prev.favorites[type][name];\n      else { prev.favorites[type][name] = content }\n      \n      return { favorites: prev.favorites, };\n    })\n  }\n\n  trigger\n\n  render() {\n    const { data, loading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Route path='/' render={(props) => <Sidebar {...props} data={data} />} />\n        <Switch>\n          <Route exact path='/' render={(props) => <Landing {...props} data={data} loading={loading} />} />\n          <Route exact path='/People' render={(props) => <People {...props} data={data} toggleFavorite={this.toggleFavorite} getAttribute={this.getAttribute} loading={loading}/>}/>\n          <Route exact path='/Planets' render={(props) => <Planets {...props} data={data} toggleFavorite={this.toggleFavorite} getAttribute={this.getAttribute} loading={loading}/>}/>\n          <Route exact path='/Vehicles' render={(props) => <Vehicles {...props} data={data} toggleFavorite={this.toggleFavorite} getAttribute={this.getAttribute} loading={loading}/>}/>\n          <Route exact path='/Favorites' render={(props) => <Favorites {...props} data={data} toggleFavorite={this.toggleFavorite} getAttribute={this.getAttribute} favorites={this.state.favorites} loading={loading}/>}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={`${process.env.PUBLIC_URL}/swapibox`}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}